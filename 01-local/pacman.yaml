kind: Deployment
apiVersion: apps/v1
metadata:
  name: pacman
  namespace: pacman
  labels:
    app: pacman
    app.kubernetes.io/component: pacman
    app.kubernetes.io/instance: pacman
    app.kubernetes.io/name: pacman
    app.kubernetes.io/part-of: pacman-app
    app.openshift.io/runtime: java
    app.openshift.io/runtime-namespace: pacman
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pacman
  template:
    metadata:
      labels:
        app: pacman
        deployment: pacman
    spec:
      volumes:
      - name: npm-cache-volume
        emptyDir: {}
      containers:
        - name: pacman
          image: https://ghcr.io/romdalf/pacman:1.0
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: MONGO_SERVICE_HOST
              value: mongo
            - name: MONGO_AUTH_USER
              value: secret
            - name: MONGO_AUTH_PWD
              value: mongoadmin
          resources: {}
          volumeMounts:
            - name: npm-cache-volume
              mountPath: /.npm          
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      imagePullSecrets: []
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  paused: false
